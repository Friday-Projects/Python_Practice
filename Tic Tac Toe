#Tic Tac Toe
# 3x3 board, 3 in row wins
#Player chooses x or o
#computer will default to opposite
#nice format from automate the boring stuff


game_board = {'top-L': ' ', 'top-M': ' ', 'top-R': ' ', 'mid-L': ' ', 'mid-M': ' ', 'mid-R': ' ','bot-L': ' ', 'bot-M': ' ', 'bot-R': ' '}
# 3 rows (top, mid, bot) 3 position per row (L, M, R)

def makeboard(board):
    print(board['top-L'] + '| ' + board['top-M'] + '| ' + board['top-R'])
    print('______')
    print(board['mid-L'] + '| ' + board['mid-M'] + '| ' + board['mid-R'])
    print('______')
    print(board['bot-L'] + '| ' + board['bot-M'] + '| ' + board['bot-R'])

def inputplayerletter():
    letter = ''
    while not (letter == 'X' or letter == 'O'):
        print('Do you want to be X or O')
        letter = input().upper()
        #player chooses their letter. letter capitalized with .upper()
        if letter == 'X':
            return ['X', 'O']
        else:
            return ['O', 'X']
        #[player, computer]
        
 def iswin(position, letter):
    return ((position['top-L'] == letter and position['top-M'] == letter and position['top-R'] == letter) or # across the top
            # across the middle
            (position['mid-L'] == letter and position['mid-M'] == letter and position['mid-R'] == letter) or
            # across the bottom
            (position['bot-L'] == letter and position['bot-M'] == letter and position['bot-R'] == letter) or
            # down the left column
            (position['top-L'] == letter and position['mid-L'] == letter and position['bot-L'] == letter) or
            # down the middle column
            (position['top-M'] == letter and position['mid-M'] == letter and position['bot-M'] == letter) or
            # down the right column
            (position['top-R'] == letter and position['mid-R'] == letter and position['bot-R'] == letter) or
            # diagonal from top-L to bot-R
            (position['top-L'] == letter and position['mid-M'] == letter and position['bot-R'] == letter) or
            # diagonal from bot-L to top-R
            (position['bot-L'] == letter and position['mid-M'] == letter and position['top-R'] == letter))       
        
